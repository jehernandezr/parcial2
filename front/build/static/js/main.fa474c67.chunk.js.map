{"version":3,"sources":["services/utils.js","components/card/Card.js","components/notification/Notification.js","pages/homes-list/HomesList.js","components/card-room/CardRoom.js","components/pie/Chartpie.js","pages/home-detail/HomeDetail.js","i18n/locales.js","components/nav/Navbar.js","i18n/messages/en-us.js","i18n/messages/es-co.js","i18n/messages/index.js","router/AppRouter.js","App.js","serviceWorkerRegistration.js","reportWebVitals.js","index.js"],"names":["HOME_API","getHomes","a","fetch","then","getJSON","getHomeById","id","response","json","Card","props","className","to","type","src","alt","name","address","notify","toast","warn","position","autoClose","hideProgressBar","closeOnClick","pauseOnHover","draggable","progress","undefined","Notification","newestOnTop","rtl","pauseOnFocusLoss","HomesList","useState","homes","setHomes","useEffect","navigator","onLine","data","localStorage","setItem","JSON","stringify","getItem","parse","map","home","CardRoom","onClick","e","setSelectedDevices","devs","d3","require","Chartpie","rooms","chartref","useRef","r","powerUsage","unit","value","label","String","count","current","svg","select","width","attr","radius","Math","min","g","append","color","scaleOrdinal","schemeCategory10","pie","d","arc","outerRadius","innerRadius","arcs","selectAll","enter","centroid","text","exit","remove","height","ref","HomeDetail","homeDetail","setHomeDetail","useParams","selectedDevices","dat","console","log","room","devices","_id","uuid","TableDevice","devicesDetail","setdevicesDetail","Table","striped","bordered","hover","size","index","desired","LOCALES","Navbar","setLanguage","data-bs-toggle","data-bs-target","aria-controls","aria-expanded","aria-label","aria-current","Dropdown","Toggle","variant","Menu","Item","href","hello","spaces","smart","username","password","login","logout","example","myRooms","stats","device","valueDevice","language","spanish","english","seedevices","en","es","AppRouter","locale","messages","exact","path","App","isLocalhost","Boolean","window","location","hostname","match","registerValidSW","swUrl","config","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","state","controller","onUpdate","onSuccess","catch","error","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","document","getElementById","URL","process","origin","addEventListener","headers","contentType","get","status","indexOf","ready","unregister","reload","checkValidServiceWorker","serviceWorkerRegistration"],"mappings":"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","file":"static/js/main.fa474c67.chunk.js","sourcesContent":["const HOME_API = \"/api/homes\";\r\n\r\nconst getHomes = async () => {\r\n  return fetch(HOME_API).then(getJSON);\r\n};\r\n\r\nconst getHomeById = async (id) => {\r\n  return fetch(`${HOME_API}/${id}`).then(getJSON);\r\n};\r\n\r\nconst getJSON = (response) => response.json();\r\n\r\nexport { getHomes, getHomeById };\r\n","import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport \"./Card.scss\";\r\n\r\nexport const Card = (props) => {\r\n  return (\r\n    <div className=\"card card-home\">\r\n      <Link className=\"card-home-img-link\" to={`/homes/${props.id}`}>\r\n        {props.type === \"house\" ? (\r\n          <img src=\"/home.png\" className=\"card-home-img-top\" alt=\"Icon Home\" />\r\n        ) : (\r\n          <img\r\n            src=\"/loft.png\"\r\n            className=\"card-home-img-top loft\"\r\n            alt=\"Icon Loft\"\r\n          />\r\n        )}\r\n      </Link>\r\n      <div className=\"card-home-body\">\r\n        <div className=\"card-home-body-description\">\r\n          <h5 className=\"card-home-title\">{props.name}</h5>\r\n          <p className=\"card-home-text\">{props.address}</p>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n","import React from 'react'\r\nimport { ToastContainer, toast } from 'react-toastify';\r\nimport 'react-toastify/dist/ReactToastify.css';\r\nexport const notify = () => toast.warn('Sin conexion a internet, corriendo con los ultimos datos guardados', {\r\n    position: \"bottom-right\",\r\n    autoClose: 5000,\r\n    hideProgressBar: false,\r\n    closeOnClick: true,\r\n    pauseOnHover: true,\r\n    draggable: true,\r\n    progress: undefined,\r\n    });;\r\n\r\nexport  function Notification() {\r\n    \r\n         \r\n        \r\n    return (\r\n        <ToastContainer\r\n          position=\"bottom-right\"\r\n          autoClose={5000}\r\n          hideProgressBar={false}\r\n          newestOnTop={false}\r\n          closeOnClick\r\n          rtl={false}\r\n          pauseOnFocusLoss\r\n          draggable\r\n          pauseOnHover\r\n          />\r\n\r\n    )\r\n}\r\n","import React, { useEffect, useState } from \"react\";\r\nimport \"./HomesList.scss\";\r\nimport { getHomes } from \"../../services/utils\";\r\nimport { Card } from \"../../components/card/Card\";\r\nimport { FormattedMessage } from \"react-intl\";\r\nimport { Notification, notify } from \"../../components/notification/Notification\";\r\nexport const HomesList = () => {\r\n  const [homes, setHomes] = useState([]);\r\n\r\n  useEffect(() => {\r\n\r\n    if(!navigator.onLine){\r\n      notify();\r\n      if(localStorage.getItem(\"houses\") === \"\") {\r\n        setHomes(\"Loading...\")\r\n      } else {\r\n        setHomes(JSON.parse(localStorage.getItem(\"houses\")));\r\n      }\r\n  } else {\r\n      getHomes().then((data) => {setHomes(data)\r\n        localStorage.setItem(\"houses\", JSON.stringify(data));\r\n      });\r\n  }  \r\n  }, []);\r\n\r\n  return (\r\n    <div className=\"container home\">\r\n      <h1>\r\n      <FormattedMessage id=\"spaces\" />\r\n      </h1>\r\n\r\n     <div className=\"list-homes\">\r\n     {homes && homes.map((home)=> <Card key={home.id} id={home.id} type={home.type} \r\n      name={home.name} address={home.address}/>)}\r\n     </div>\r\n     <Notification/>\r\n    </div>\r\n  );\r\n};\r\n","import {React, useState} from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport \"./CardRoom.scss\";\r\n\r\nexport const CardRoom = (props) => {\r\n  const handleClick=(e)=>{\r\n    props.setSelectedDevices(props.devs)\r\n  }\r\n  return (\r\n    <div id={props.id} className=\"card card-room\" onClick={handleClick}>\r\n      <div className=\"card-room-body\">\r\n        <div className=\"card-room-body-description\">\r\n          <h5 className=\"card-room-title\">{props.name}</h5>\r\n        </div>\r\n      </div>\r\n      <div className=\"card-room-img-link\" >\r\n        {props.type === \"kitcken\" ? (\r\n          <img src=\"/kitchen.png\" className=\"card-room-img-top\" alt=\"Icon Home\" />\r\n        ) : (\r\n          <img\r\n            src=\"/living-room.png\"\r\n            className=\"card-room-img-top loft\"\r\n            alt=\"Icon Living-room\"\r\n          />\r\n        )}\r\n      </div>\r\n      \r\n    </div>\r\n  );\r\n};\r\n\r\n\r\n\r\n","import { React, useRef, useEffect,useState } from \"react\";\r\nimport \"./Chartpie.scss\";\r\nconst d3 = require(\"d3\");\r\n\r\nexport function Chartpie({ rooms }) {\r\n  const chartref = useRef(null);\r\n  \r\n  useEffect(() => {\r\n    let data = rooms.map((r) => {\r\n      let { unit, value } = r.powerUsage;\r\n      let label = r.name + \":\" + unit + String(value);\r\n\r\n      return { label: label, count: value };\r\n    });\r\n\r\n    if (rooms && chartref.current) {\r\n      let svg = d3.select(chartref.current);\r\n\r\n      let width = 450;\r\n      let height = 450;\r\n\r\n      // The radius of the pieplot is half the width or half the height (smallest one). I subtract a bit of margin.\r\n\r\n      svg.attr(\"width\", width).attr(\"height\", height);\r\n\r\n      let radius = Math.min(width, height) / 2;\r\n      let g = svg\r\n        .append(\"g\")\r\n        .attr(\"transform\", \"translate(\" + width / 2 + \",\" + height / 2 + \")\");\r\n\r\n      // set the color scale\r\n      let color = d3.scaleOrdinal(d3.schemeCategory10);\r\n\r\n      // Compute the position of each group on the pie:\r\n      let pie = d3.pie().value(function (d) {\r\n        return d.count;\r\n      });\r\n\r\n      let arc = d3\r\n        .arc()\r\n        .outerRadius(radius - radius / 4)\r\n        .innerRadius(0);\r\n\r\n      let arcs = g\r\n        .selectAll(\".arc\")\r\n        .data(pie(data))\r\n        .enter()\r\n        .append(\"g\");\r\n      arcs\r\n        .append(\"path\")\r\n        .attr(\"d\", arc)\r\n        .attr(\"fill\", function (d) {\r\n          return color(d.data.label);\r\n        });\r\n\r\n        // Labels\r\n      arcs.append(\"text\")\r\n        .attr(\"transform\", function (d) {\r\n        return \"translate(\" + arc.centroid(d) + \")\";\r\n        })\r\n        .attr(\"text-anchor\", \"middle\")\r\n        .text(function (d) {\r\n        return d.data.label;\r\n        });\r\n      svg\r\n        .append(\"g\")\r\n        .attr(\"transform\", \"translate(\" + (width / 2 - 70) + \",\" + 20 + \")\")\r\n        .append(\"text\")\r\n        .text(\"Power Usage - Today\")\r\n        .attr(\"class\", \"title\");\r\n\r\n      // Remove old D3 elements\r\n      svg.exit().remove();\r\n    }\r\n\r\n\r\n  }, [chartref.current]);\r\n\r\n\r\n  return (<div id =\"chart\"> \r\n    <svg width={400} height={200} ref={chartref} />\r\n  </div>);\r\n}\r\n\r\n\r\n","import React, { useEffect, useState } from \"react\";\r\nimport \"./HomesDetail.scss\";\r\nimport { v1 as uuid } from 'uuid';\r\nimport { getHomeById } from \"../../services/utils\";\r\nimport { CardRoom } from \"../../components/card-room/CardRoom\";\r\nimport { useParams } from \"react-router\"\r\nimport { Table } from 'react-bootstrap';\r\nimport { FormattedMessage } from \"react-intl\";\r\nimport {Chartpie} from '../../components/pie/Chartpie';\r\nimport { Notification, notify } from \"../../components/notification/Notification\";\r\n\r\nexport const HomeDetail = () => {\r\n  const [homeDetail, setHomeDetail] = useState([]);\r\n  const {id} =useParams();\r\n  const [selectedDevices, setSelectedDevices] = useState(null);\r\n  \r\n  \r\n  useEffect(() => {\r\n    if(!navigator.onLine){\r\n      notify();\r\n      if(localStorage.getItem(\"homeDetail\") === \"\") {\r\n        setHomeDetail(\"Loading...\")\r\n      } else {\r\n        let dat=JSON.parse(localStorage.getItem(\"homeDetail\"));\r\n        console.log(dat.id)\r\n        if(dat.id ===id)\r\n        {\r\n          setHomeDetail(dat);\r\n        }\r\n        else {\r\n          setHomeDetail(\"Content not available\")\r\n        }\r\n        \r\n\r\n      }\r\n  } else {\r\n    getHomeById(id).then((data) => {setHomeDetail(data)\r\n        localStorage.setItem(\"homeDetail\", JSON.stringify(data));\r\n      });\r\n  }  \r\n  }, [id]);\r\n\r\n  \r\n\r\n\r\n  return (\r\n    <div className=\"container home\">\r\n      <h1>\r\n      <FormattedMessage id=\"myRooms\" />\r\n      </h1>\r\n     <div className=\"row\">\r\n       <div className=\"col-6\">\r\n         <div className=\"row\">\r\n         {homeDetail && homeDetail.rooms && \r\n         (homeDetail.rooms).map((room)=> <CardRoom key={room._id} type={room.type} \r\n        name={room.name}  devs={room.devices} setSelectedDevices={setSelectedDevices}/>)}\r\n         </div>\r\n       </div>\r\n       {selectedDevices ? <TableDevice key={uuid()} devs={selectedDevices} />: <div className=\"col-6\"><FormattedMessage id=\"seedevices\" /></div> }\r\n     </div>\r\n      <div className=\"row\">\r\n        {\r\n          homeDetail && homeDetail.rooms?  <Chartpie rooms={homeDetail.rooms} />: <></>\r\n        }\r\n        <Notification/>\r\n        <div>\r\n      </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst TableDevice =({devs})=> {\r\n  const [devicesDetail, setdevicesDetail] = useState(null);\r\n  useEffect(() => {\r\n    setdevicesDetail(devs);\r\n  }, [devs]);\r\n  return (\r\n  <div className=\"col-6\">\r\n    {devicesDetail && (\r\n        <>\r\n  <Table striped bordered hover size=\"sm\"  >\r\n    <thead>\r\n      <tr>\r\n        <th>#</th>\r\n        <th>ID</th>\r\n        <th><FormattedMessage id=\"device\" /></th>\r\n        <th><FormattedMessage id=\"valueDevice\" /></th>\r\n      </tr>\r\n    </thead>\r\n    <tbody>\r\n     {devicesDetail.map((d, index)=>{ return (\r\n      <tr key ={uuid()}>\r\n      <td>{index+1}</td>\r\n       <td>{d.id}</td>\r\n       <td>{d.name}</td>\r\n       <td>{d.desired.value}</td>\r\n     </tr>\r\n     )})}\r\n      \r\n    </tbody>\r\n  </Table>  \r\n    </>)}   \r\n  </div>\r\n  );\r\n}\r\n","export const LOCALES = {\r\n  ENGLISH: \"en-us\",\r\n  SPANISH: \"es-co\",\r\n};\r\n","import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport \"./Navbar.scss\";\r\nimport { LOCALES } from \"../../i18n/locales\";\r\nimport { FormattedMessage } from \"react-intl\";\r\nimport {Dropdown} from 'react-bootstrap';\r\nexport const Navbar = ({ setLanguage }) => {\r\n\r\n  return (\r\n    <nav className=\"navbar navbar-expand-lg navbar-light bg-light\">\r\n      <div className=\"container-fluid\">\r\n        <Link className=\"navbar-brand\" to=\"/\">\r\n          <FormattedMessage id=\"smart\" />\r\n        </Link>\r\n        <button\r\n          className=\"navbar-toggler\"\r\n          type=\"button\"\r\n          data-bs-toggle=\"collapse\"\r\n          data-bs-target=\"#navbarNavAltMarkup\"\r\n          aria-controls=\"navbarNavAltMarkup\"\r\n          aria-expanded=\"false\"\r\n          aria-label=\"Toggle navigation\"\r\n        >\r\n          <span className=\"navbar-toggler-icon\"></span>\r\n        </button>\r\n        <div className=\"collapse navbar-collapse\" id=\"navbarNavAltMarkup\">\r\n          <div className=\"navbar-nav\">\r\n            <div className=\"navbar-nav-links\">\r\n              <Link className=\"nav-link active\" aria-current=\"page\" to=\"/homes\">\r\n                <FormattedMessage id=\"spaces\" />\r\n              </Link>\r\n            </div>\r\n              <Dropdown>\r\n              <Dropdown.Toggle variant=\"success\" id=\"dropdown-basic\">\r\n              <FormattedMessage id=\"language\" />\r\n              </Dropdown.Toggle>\r\n\r\n              <Dropdown.Menu>\r\n                <Dropdown.Item  onClick={()=> setLanguage(LOCALES.SPANISH)} href=\"\"><FormattedMessage id=\"spanish\" /></Dropdown.Item>\r\n                <Dropdown.Item onClick={()=> setLanguage(LOCALES.ENGLISH)} href=\"\"><FormattedMessage id=\"english\" /></Dropdown.Item>\r\n              </Dropdown.Menu>\r\n            </Dropdown>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </nav>\r\n  );\r\n};\r\n","import { LOCALES } from \"../locales\";\r\n\r\nexport default {\r\n  [LOCALES.ENGLISH]: {\r\n    hello: \"Hello\",\r\n    homes: \"Homes\",\r\n    spaces: \"My spaces\",\r\n    smart: \"Smart Home\",\r\n    username: \"Username\",\r\n    password: \"Password\",\r\n    login: \"Login\",\r\n    logout: \"Logout\",\r\n    example: \"You have {money} million\",\r\n    myRooms: \"My rooms\",\r\n    stats: \"Stats\",\r\n    device:\"Device\",\r\n    valueDevice:\"Value\",\r\n    language: \"Language\",\r\n    spanish: \"Spanish\",\r\n    english: \"English\",\r\n    seedevices:\"Select a room to see it's devices\",\r\n  },\r\n};\r\n","import { LOCALES } from \"../locales\";\r\n\r\nexport default {\r\n  [LOCALES.SPANISH]: {\r\n    hello: \"Hola\",\r\n    homes: \"Casas\",\r\n    spaces: \"Mis espacios\",\r\n    smart: \"Smart Home\",\r\n    username: \"Usuario\",\r\n    password: \"Contraseña\",\r\n    login: \"Entrar\",\r\n    logout: \"Salir\",\r\n    example:\r\n      \"Tu tienes {money, plural, =0 { nada} one {# un millón} other {# millones}}\",\r\n    device:\"Dispositivo\",\r\n    valueDevice:\"Valor\",\r\n    myRooms: \"Mis habitaciones\",\r\n    stats: \"Estadísticas\",\r\n    language: \"Idioma\",\r\n    spanish: \"Español\",\r\n    english: \"Inglés\",\r\n    seedevices:\"Selecciona habitacion para ver dispositivos\",\r\n  },\r\n};\r\n","import en from \"./en-us\";\r\nimport es from \"./es-co\";\r\n\r\nexport default {\r\n  ...en,\r\n  ...es,\r\n};\r\n","import React, { useState } from \"react\";\r\nimport { BrowserRouter as Router, Switch, Route } from \"react-router-dom\";\r\nimport { HomesList } from \"../pages/homes-list/HomesList\";\r\nimport { HomeDetail } from \"../pages/home-detail/HomeDetail\";\r\nimport { Navbar } from \"../components/nav/Navbar\";\r\nimport { IntlProvider } from \"react-intl\";\r\nimport { LOCALES } from \"../i18n/locales\";\r\nimport messages from \"../i18n/messages\";\r\n\r\nexport const AppRouter = () => {\r\n  const [language, setLanguage] = useState(LOCALES.ENGLISH);\r\n\r\n  return (\r\n    <IntlProvider locale={language} messages={messages[language]}>\r\n      <Router>\r\n        <Navbar setLanguage={setLanguage}></Navbar>\r\n        <Switch>\r\n          <Route exact path=\"/\">\r\n            <HomesList />\r\n          </Route>\r\n          <Route exact path=\"/homes\">\r\n            <HomesList />\r\n          </Route>\r\n          <Route exact path=\"/homes/:id\">\r\n            <HomeDetail />\r\n          </Route>\r\n        </Switch>\r\n      </Router>\r\n    </IntlProvider>\r\n  );\r\n};\r\n","import \"./App.scss\";\r\nimport React from \"react\";\r\nimport { AppRouter } from \"./router/AppRouter\";\r\n\r\nfunction App() {\r\n  return (\r\n    <>\r\n      <main>\r\n        <AppRouter />\r\n      </main>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://cra.link/PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(/^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/)\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://cra.link/PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then((registration) => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://cra.link/PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch((error) => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then((response) => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then((registration) => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log('No internet connection found. App is running in offline mode.');\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then((registration) => {\n        registration.unregister();\n      })\n      .catch((error) => {\n        console.error(error.message);\n      });\n  }\n}\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React, { useState } from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport \"./styles/custom.scss\";\r\nimport \"./index.css\";\r\nimport App from \"./App\";\r\nimport * as serviceWorkerRegistration from './serviceWorkerRegistration';\r\nimport reportWebVitals from \"./reportWebVitals\";\r\n\r\nReactDOM.render(<App />, document.getElementById(\"root\"));\r\n\r\nserviceWorkerRegistration.register();\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}